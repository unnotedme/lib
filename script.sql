CREATE DATABASE [IF NOT EXISTS] LIBRARYSYSTEM;
USE LIBRARYSYSTEM;

CREATE TABLE [IF NOT EXISTS] BOOKS(
    ISBN VARCHAR(13) NOT NULL,
    TITLE VARCHAR(50) NOT NULL,
    CATEGORY_ID VARCHAR(50) NOT NULL,
    PUBLISHER VARCHAR(50) NOT NULL,
    PUBLISHED_DATE DATE NOT NULL,
    PRIMARY KEY (ISBN)
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID)
);

CREATE TABLE [IF NOT EXISTS] CATEGORIES(
    CATEGORY_ID VARCHAR(50) NOT NULL,
    CATEGORY_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE [IF NOT EXISTS] AUTHORS(
    AUTHOR_ID VARCHAR(50) NOT NULL,
    AUTHOR_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY (AUTHOR_ID)
);

CREATE TABLE [IF NOT EXISTS] BOOK_AUTHORS(
    ISBN VARCHAR(13) NOT NULL,
    AUTHOR_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ISBN, AUTHOR_ID)
    FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN)
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(AUTHOR_ID)
);

CREATE TABLE [IF NOT EXISTS] WAITING_LIST(
    PATRON_ID VARCHAR(50) NOT NULL,
    ISBN VARCHAR(13) NOT NULL,
    PRIMARY KEY (PATRON_ID, ISBN)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] PATRONS(
    CARD_NUMBER VARCHAR(50) NOT NULL,
    PATRON_FNAME VARCHAR(50) NOT NULL,
    PATRON_LNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    STATUS VARCHAR(50) NOT NULL,
    PRIMARY KEY (CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] CHECKOUTS(
    CHECKOUT_ID VARCHAR(50) NOT NULL,
    ISBN VARCHAR(13) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    CHECKOUT_DATE DATE NOT NULL,
    DUE_DATE DATE NOT NULL,
    IS_RETURNED BOOLEAN NOT NULL,
    PRIMARY KEY (CHECKOUT_ID)
    FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] BOOK_COPY(
    ID VARCHAR(50) NOT NULL,
    YEAR_PUBLISHED VARCHAR(50) NOT NULL,
    ISBN VARCHAR(13) NOT NULL,
    PUBLISHER_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (ISBN) REFERENCES BOOKS(ISBN)
    FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHERS(PUBLISHER_ID)
);

CREATE TABLE [IF NOT EXISTS] PUBLISHERS(
    PUBLISHER_ID VARCHAR(50) NOT NULL,
    PUBLISHER_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY (PUBLISHER_ID)
);

CREATE TABLE [IF NOT EXISTS] HOLD(
    ID VARCHAR(50) NOT NULL,
    START_TIME DATE NOT NULL,
    END_TIME DATE NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] NOTIFICATION(
    ID VARCHAR(50) NOT NULL,
    SENT_AT DATE NOT NULL,
    TYPE VARCHAR(50) NOT NULL,
    PATRON_ACCOUNT_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (PATRON_ACCOUNT_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] FINE(
    ID VARCHAR(50) NOT NULL,
    AMOUNT DECIMAL(10,2) NOT NULL,
    PAID BOOLEAN NOT NULL,
    PAID_AT DATE NOT NULL,
    CHECKOUT_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (CHECKOUT_ID) REFERENCES CHECKOUTS(CHECKOUT_ID)
);

CREATE TABLE [IF NOT EXISTS] BOOK_LOST(
    ID VARCHAR(50) NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] BOOK_DAMAGED(
    ID VARCHAR(50) NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] BOOK_REPAIR(
    ID VARCHAR(50) NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] BOOK_REPLACEMENT(
    ID VARCHAR(50) NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);

CREATE TABLE [IF NOT EXISTS] BOOK_RENEW(
    ID VARCHAR(50) NOT NULL,
    BOOK_COPY_ID VARCHAR(50) NOT NULL,
    PATRON_ID VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    FOREIGN KEY (BOOK_COPY_ID) REFERENCES BOOK_COPY(ID)
    FOREIGN KEY (PATRON_ID) REFERENCES PATRONS(CARD_NUMBER)
);